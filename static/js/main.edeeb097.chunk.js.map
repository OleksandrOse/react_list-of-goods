{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","reset","this","finishGoods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","isReset","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MADuC,OAGvC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDLjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,WACf,EAAKD,SAAS,CACZH,SAAUT,EAASc,YAdzB,EAkBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUT,EAASgB,UAnBvC,EAsBEC,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QAzBzB,4CA6BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA5DH,SACLjB,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOlB,GAazB,OAXAkB,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,KAAKT,EAASc,SACZ,OAAOQ,EAAEE,cAAcD,GACzB,KAAKvB,EAASgB,OACZ,OAAOM,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITjB,EACKY,EAAaT,UAGfS,EAuCeM,CAAkBrB,EAAiBa,KAAKX,OACtDoB,GAAyB,IAAfnB,GAAwBC,IAAaT,EAASU,KAE9D,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYrB,IAAaT,EAASc,WAGtCiB,QAASb,KAAKL,eARhB,iCAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYrB,IAAaT,EAASgB,SAGtCe,QAASb,KAAKH,aARhB,4BAaA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAftB,IAGhBuB,QAASb,KAAKP,QARhB,qBAaCgB,GACC,wBACEE,KAAK,SACLD,UAAWE,IACT,mBACA,CACE,YAAaH,IAGjBI,QAASb,KAAKD,MARhB,sBAcJ,cAAC,EAAD,CAAWf,MAAOiB,WA3F1B,GAAyBa,IAAMC,WExD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.edeeb097.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const finishGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isReset = isReversed !== false || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isReset && (\n            <button\n              type=\"button\"\n              className={classNames(\n                'button is-danger',\n                {\n                  'is-light': !isReset,\n                },\n              )}\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <GoodsList goods={finishGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList:React.FC<Props> = ({\n  goods,\n}) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}